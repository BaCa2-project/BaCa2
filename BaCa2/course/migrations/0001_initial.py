# Generated by Django 5.0.4 on 2024-04-22 18:40

import pathlib

import django.db.models.deletion
from django.db import migrations, models

import course.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('name', models.CharField(default='<no-name>', max_length=2047)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True)),
                ('deadline_date', models.DateTimeField()),
                ('reveal_date', models.DateTimeField(null=True)),
                ('score_selection_policy',
                 models.CharField(choices=[('BEST', 'Best submit'), ('LAST', 'Last submit')],
                                  default='BEST', max_length=4)),
                ('fall_off_policy', models.CharField(
                    choices=[('NONE', 'No fall-off (max points until deadline)'),
                             ('LINEAR', 'Linear fall-off'), ('SQUARE', 'Square fall-off')],
                    default='NONE')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('short_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('package_instance_id', models.BigIntegerField(
                    validators=[course.models.TaskManager.package_instance_exists_validator])),
                ('task_name', models.CharField(max_length=1023)),
                ('judging_mode',
                 models.CharField(choices=[('UNA', 'Unanimous'), ('LIN', 'Linear')], default='LIN',
                                  max_length=3)),
                ('points', models.FloatField()),
                ('is_legacy', models.BooleanField(default=False)),
                ('round',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.round')),
                ('updated_task', models.ForeignKey(default=None, null=True,
                                                   on_delete=django.db.models.deletion.SET_NULL,
                                                   to='course.task')),
            ],
        ),
        migrations.CreateModel(
            name='Submit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('submit_date', models.DateTimeField()),
                ('source_code', models.FilePathField(max_length=2047, null=True,
                                                     path=pathlib.PurePosixPath(
                                                         '/home/www/BaCa2/BaCa2/submits'))),
                ('usr', models.BigIntegerField(
                    validators=[course.models.SubmitManager.user_exists_validator])),
                ('submit_type', models.CharField(
                    choices=[('STD', 'Standard'), ('HID', 'Hidden'), ('CTR', 'Control')],
                    default='STD', max_length=3)),
                ('submit_status', models.CharField(
                    choices=[('PND', 'Pending'), ('OK', 'Accepted'), ('ANS', 'Wrong answer'),
                             ('TLE', 'Time limit exceeded'), ('RTE', 'Runtime error'),
                             ('MEM', 'Memory exceeded'), ('CME', 'Compilation error'),
                             ('RUL', 'Rule violation'), ('EXT', 'Unknown extension'),
                             ('ITL', 'Internal timeout'), ('INT', 'Internal error')], default='PND',
                    max_length=3)),
                ('error_msg', models.TextField(blank=True, default=None, null=True)),
                ('retries', models.IntegerField(default=0)),
                ('final_score', models.FloatField(default=-1)),
                ('fixed_fall_off_factor', models.FloatField(default=None, null=True)),
                ('task',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.task')),
            ],
            options={
                'permissions': [('view_code', 'Can view submit code'),
                                ('view_compilation_logs', 'Can view submit compilation logs'),
                                ('view_checker_logs', 'Can view submit checker logs'), (
                                    'view_student_output',
                                    'Can view output generated by the student solution'),
                                ('view_benchmark_output', 'Can view benchmark output'),
                                ('view_inputs', 'Can view test inputs'),
                                ('view_used_memory', 'Can view used memory'),
                                ('view_used_time', 'Can view used time'),
                                ('rejudge_submit', 'Can rejudge submit')],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('status', models.CharField(
                    choices=[('PND', 'Pending'), ('OK', 'Accepted'), ('ANS', 'Wrong answer'),
                             ('TLE', 'Time limit exceeded'), ('RTE', 'Runtime error'),
                             ('MEM', 'Memory exceeded'), ('CME', 'Compilation error'),
                             ('RUL', 'Rule violation'), ('EXT', 'Unknown extension'),
                             ('ITL', 'Internal timeout'), ('INT', 'Internal error')], default='PND',
                    max_length=3)),
                ('time_real', models.FloatField(default=None, null=True)),
                ('time_cpu', models.FloatField(default=None, null=True)),
                ('runtime_memory', models.IntegerField(default=None, null=True)),
                ('compile_log', models.TextField(default=None, null=True)),
                ('checker_log', models.TextField(default=None, null=True)),
                ('answer', models.TextField(default=None, null=True)),
                ('submit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                             to='course.submit')),
                ('test',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.test')),
            ],
        ),
        migrations.CreateModel(
            name='TestSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('short_name', models.CharField(max_length=255)),
                ('weight', models.FloatField()),
                ('task',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.task')),
            ],
        ),
        migrations.AddField(
            model_name='test',
            name='test_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    to='course.testset'),
        ),
    ]
